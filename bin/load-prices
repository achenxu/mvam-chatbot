#! /bin/bash

psql $PG_URL << SQL_SCRIPT

\echo Create temp table to load CSV into, as we cannot skip columns when importing a CSV in postgres
CREATE TEMPORARY TABLE prices_import (
  location_adm0_id INT,
  location_adm0_name VARCHAR,
  location_adm1_id INT,
  location_adm1_name VARCHAR,
  location_mkt_id INT,
  location_mkt_name VARCHAR,
  commodity_id INT,
  commodity_name CITEXT,
  currency_id INT,
  currency_name VARCHAR(30),
  point_id INT,
  point_name VARCHAR(60),
  unit_id INT,
  unit_name VARCHAR(30),
  month INT,
  year INT,
  price DOUBLE PRECISION,
  source VARCHAR
);

\echo Import full CSV into temp table
\copy prices_import FROM program 'bin/get-prices' WITH (FORMAT csv, HEADER true, ENCODING 'latin1');

\echo Pick the columns we are interested in and insert them into prices_history
INSERT INTO prices_history (price_id, location_adm0_id, location_adm1_id, location_mkt_id, commodity_id, commodity_name, currency_id, currency_name, unit_id, unit_name, month, year, price)
SELECT concat_ws('.', location_adm0_id, location_adm1_id, location_mkt_id, commodity_id) AS price_id, location_adm0_id, location_adm1_id, location_mkt_id, commodity_id, commodity_name, currency_id, currency_name, unit_id, unit_name, month, year, price
FROM prices_import
WHERE location_adm0_id != 0 AND location_adm1_id != 0 AND location_mkt_id != 0
AND location_adm0_name IS NOT NULL AND location_adm1_name IS NOT NULL AND location_mkt_name IS NOT NULL
AND NOT commodity_name LIKE 'Wage%' AND commodity_name != 'Exchange rate';

\echo Upsert locations level 0
INSERT INTO locations_adm0 (id, name)
SELECT DISTINCT ON (location_adm0_id) location_adm0_id, location_adm0_name
FROM prices_import
WHERE location_adm0_id != 0 AND location_adm1_id != 0 AND location_mkt_id != 0
AND location_adm0_name IS NOT NULL AND location_adm1_name IS NOT NULL AND location_mkt_name IS NOT NULL
ON CONFLICT (id) DO UPDATE SET name = EXCLUDED.name;

\echo Upsert locations level 1
INSERT INTO locations_adm1 (id, name, location_adm0_id)
SELECT DISTINCT ON (location_adm1_id) location_adm1_id, location_adm1_name, location_adm0_id
FROM prices_import
WHERE location_adm0_id != 0 AND location_adm1_id != 0 AND location_mkt_id != 0
AND location_adm0_name IS NOT NULL AND location_adm1_name IS NOT NULL AND location_mkt_name IS NOT NULL
ON CONFLICT (id) DO UPDATE SET name = EXCLUDED.name, location_adm0_id = EXCLUDED.location_adm0_id;

\echo Upsert locations mkt
INSERT INTO locations_mkt (id, name, location_adm1_id, location_adm0_id)
SELECT DISTINCT ON (location_mkt_id) location_mkt_id, location_mkt_name, location_adm1_id, location_adm0_id
FROM prices_import
WHERE location_adm0_id != 0 AND location_adm1_id != 0 AND location_mkt_id != 0
AND location_adm0_name IS NOT NULL AND location_adm1_name IS NOT NULL AND location_mkt_name IS NOT NULL
ON CONFLICT (id) DO UPDATE SET name = EXCLUDED.name, location_adm1_id = EXCLUDED.location_adm1_id;

\echo Select the rows with the most recent value for pricing for each commodity in each mkt and insert them into prices
WITH pmax AS (SELECT location_mkt_id, commodity_id, max(concat(year, month)) AS ym FROM prices_import GROUP BY location_mkt_id, commodity_id)
INSERT INTO prices (id, location_adm0_id, location_adm1_id, location_mkt_id, commodity_id, commodity_name, currency_id, currency_name, unit_id, unit_name, month, year, price)
SELECT DISTINCT ON (price_id) price_id, location_adm0_id, location_adm1_id, location_mkt_id, commodity_id, commodity_name, currency_id, currency_name, unit_id, unit_name, month, year, price
FROM prices_history
WHERE (location_mkt_id, commodity_id, concat(year, month)) IN (SELECT location_mkt_id, commodity_id, ym FROM pmax);

\echo Drop temp table
DROP TABLE prices_import;

SQL_SCRIPT
